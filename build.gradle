// Top-level build file where you can add configuration options common to all sub-projects/modules.
ext {
    compileSdkVersion       = 30
    buildToolsVersion       = '30.0.3'
    minSdkVersion           = 21
    targetSdkVersion        = 30
    robolectricVersion      = '4.3.1'
    kotlinVersion           = '1.5.31'
    liveDataVersion         = '2.3.1'
    okhttpVersion           = '4.9.3'
    kotlinxVersion          = '1.5.2'
    kotlinCoreXVersion      = '1.6.0'
    coreXLibraryVersion     = '1.6.0'
    espressoLibraryVersion    = '3.2.0'
    testXSupportLibraryVersion = '1.4.0'
    annotationXLibraryVersion = '1.2.0'
    cronetApiVersion        = '83.0.4103.106'
    multiDexVersion         = '2.0.1'
    gradleVersion           = '6.9.1'
    // Added missing library versions for modules
    appCompatXLibraryVersion    = '1.6.1'
    materialVersion            = '1.9.0'
    flexboxVersion             = '3.0.0'
    recyclerviewXLibraryVersion = '1.3.1'
    junitVersion               = '4.13.2'
    rxAndroidVersion           = '2.1.1'
    rxJavaVersion              = '2.2.21'
    // Newly added version variables
    mediaXLibraryVersion      = '1.6.0'
    glideVersion              = '4.16.0'
    workVersion               = '2.9.0'
    guavaVersion              = '31.1-android'
    browserXVersion           = '1.5.0'
    phoenixVersion            = '2.1.2'
    leanbackXLibraryVersion   = '1.1.0-alpha05'
    amazonExoplayerVersion        = '2.13.2'
    amazonExoplayerJitpackVersion = '2.13.2'
    exoplayerVersion              = '2.18.7'
    webpDecoderVersion           = '2.2.4'
    checkerframeworkVersion      = '2.5.0'
    espressoVersion              = espressoLibraryVersion // alias
    firebaseCrashlyticsVersion   = '18.6.1'
    chatkitVersion               = '0.3.3'
    gotevSpeechVersion           = '1.7.8'
}
// apply from: gradle.ext.sharedModulesConstants

// NOT working
// Running 'gradle wrapper' will generate gradlew
wrapper {
    gradleVersion = gradleVersion
    distributionType = Wrapper.DistributionType.BIN
}

buildscript {
    ext {
        androidGradleVersion = '4.2.2'
        kotlinVersion = '1.5.31'
    }
    // apply from: gradle.ext.sharedModulesConstants

    repositories {
        google()
        mavenCentral()
        // IntelliJ 'Read timed out' (error 403)
        // https://stackoverflow.com/questions/74258160/is-jcenter-down-permanently-31-oct
        //jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:' + androidGradleVersion
        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:' + kotlinVersion

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
        maven { url 'https://jitpack.io' }
        flatDir { dirs 'libs' } // include duktape-my to all subprojects
        // IntelliJ 'Read timed out' (error 403)
        // https://stackoverflow.com/questions/74258160/is-jcenter-down-permanently-31-oct
        //jcenter()
    }
    configurations.all {
        // WorkManager conflict resolution
        resolutionStrategy.force 'androidx.lifecycle:lifecycle-livedata-core:' + liveDataVersion
        resolutionStrategy.force 'androidx.lifecycle:lifecycle-livedata:' + liveDataVersion
        resolutionStrategy.force 'androidx.lifecycle:lifecycle-runtime:' + liveDataVersion
        // Force Android 4 compatible okHttp version
        resolutionStrategy.force 'com.squareup.okhttp3:okhttp:' + okhttpVersion
        // Downgrade kotlin version for WorkManager
        resolutionStrategy.force 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:' + kotlinVersion
        resolutionStrategy.force 'org.jetbrains.kotlin:kotlin-stdlib-jdk7:' + kotlinVersion
        resolutionStrategy.force 'org.jetbrains.kotlin:kotlin-stdlib:' + kotlinVersion
        resolutionStrategy.force 'org.jetbrains.kotlinx:kotlinx-coroutines-android:' + kotlinxVersion
        resolutionStrategy.force 'androidx.core:core-ktx:' + kotlinCoreXVersion
        resolutionStrategy.force 'androidx.core:core:' + coreXLibraryVersion
        resolutionStrategy.force 'androidx.annotation:annotation:' + annotationXLibraryVersion
        // Downgrade Cronet version for cronet-okhttp
        resolutionStrategy.force 'org.chromium.net:cronet-api:' + cronetApiVersion
        resolutionStrategy.force 'androidx.multidex:multidex:' + multiDexVersion

        // Replace with modded library (leanback-1.0.0)
        exclude group: 'androidx.leanback', module: 'leanback'
        // Replace with modded library (fragment-1.1.0)
        exclude group: 'androidx.fragment', module: 'fragment'

        // Don't work! Replace with modded library (leanback-1.0.0)
        // resolutionStrategy.dependencySubstitution {
        //     // substitute remote dependency with local module
        //     substitute module('androidx.leanback:leanback') using project(':leanback-1.0.0')
        // }
    }
}